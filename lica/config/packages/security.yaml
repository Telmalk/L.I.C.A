security:

    role_hierarchy:
        ROLE_ADMIN: [ROLE_USER]

    encoders:
        App\Entity\User: bcrypt
        Symfony\Component\Security\Core\User\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        user_db:
            entity: { class: App\Entity\User, property: pseudo }
#        in_memory:
#            memory:
#                users:
#                    admin:
#                        password: $2y$13$Nk/ObUVaGoH7fv1XiayNZuFcRwWuVdnjNAoi4uBxKX8r/h0s3dHFK
#                        roles: 'ROLE_ADMIN'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
#        admin:
#            pattern: ^/
#            provider: in_memory
#            form_login:
#                login_path: login
#                check_path: login
#            logout: true
#            anonymous: true
        user:
            pattern: ^/
            provider: user_db
            form_login:
                login_path: loginUser
                check_path: loginUser
            logout: true
            anonymous: true

            # activate different ways to authenticate

            # http_basic: true
            # https://symfony.com/doc/current/security.html#a-configuring-how-your-users-will-authenticate

            # form_login: true
            # https://symfony.com/doc/current/security/form_login_setup.html

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
#    access_control:
#        - { path: ^/admin/, role: ROLE_ADMIN }
#        - { path: ^/login$/, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/, role: IS_AUTHENTICATED_ANONYMOUSLY }
